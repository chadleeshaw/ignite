{{ define "content" }}
<div class="container mx-auto p-4">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold">Syslinux Boot Files Management</h1>
        <button class="btn btn-primary" onclick="document.getElementById('scanModal').showModal()">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
            </svg>
            Scan Mirror
        </button>
    </div>

    {{if .Versions}}
    <!-- Current Installation Status -->
    <div class="card bg-base-100 shadow-xl mb-6">
        <div class="card-body">
            <h2 class="card-title">Boot File Status</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="stat bg-base-200 rounded">
                    <div class="stat-figure text-primary">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
                        </svg>
                    </div>
                    <div class="stat-title">BIOS Boot Files</div>
                    <div class="stat-value text-primary">
                        {{$activeFound := false}}
                        {{range .Versions}}{{if .Active}}✓{{$activeFound = true}}{{end}}{{end}}
                        {{if not $activeFound}}-{{end}}
                    </div>
                    <div class="stat-desc">
                        {{$activeVersion := ""}}
                        {{range .Versions}}{{if .Active}}{{$activeVersion = .Version}}{{end}}{{end}}
                        {{if ne $activeVersion ""}}Version {{$activeVersion}} active{{else}}No active version{{end}}
                    </div>
                </div>
                
                <div class="stat bg-base-200 rounded">
                    <div class="stat-figure text-secondary">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                        </svg>
                    </div>
                    <div class="stat-title">EFI Boot Files</div>
                    <div class="stat-value text-secondary">
                        {{$activeFound := false}}
                        {{range .Versions}}{{if .Active}}✓{{$activeFound = true}}{{end}}{{end}}
                        {{if not $activeFound}}-{{end}}
                    </div>
                    <div class="stat-desc">
                        {{$activeVersion := ""}}
                        {{range .Versions}}{{if .Active}}{{$activeVersion = .Version}}{{end}}{{end}}
                        {{if ne $activeVersion ""}}Version {{$activeVersion}} active{{else}}No active version{{end}}
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{end}}

    <!-- Active Downloads -->
    {{if .Downloads}}
    <div class="card bg-base-100 shadow-xl mb-6">
        <div class="card-body">
            <h2 class="card-title">Active Downloads</h2>
            <div class="overflow-x-auto">
                <table class="table table-zebra w-full">
                    <thead>
                        <tr>
                            <th>Version</th>
                            <th>Status</th>
                            <th>Progress</th>
                            <th>Started</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{range .Downloads}}
                        <tr>
                            <td>{{.Version}}</td>
                            <td>
                                <div class="badge badge-info">{{.Status}}</div>
                            </td>
                            <td>
                                <div class="w-24">
                                    <div class="bg-gray-200 rounded-full h-2">
                                        <div class="bg-blue-600 h-2 rounded-full" style="width: {{.Progress}}%"></div>
                                    </div>
                                    <span class="text-xs">{{.Progress}}%</span>
                                </div>
                            </td>
                            <td>{{.StartedAt.Format "15:04:05"}}</td>
                            <td>
                                {{if or (eq .Status "downloading") (eq .Status "queued")}}
                                <button class="btn btn-xs btn-error" 
                                        hx-post="/api/syslinux/cancel/{{.ID}}"
                                        hx-confirm="Are you sure you want to cancel this download?">
                                    Cancel
                                </button>
                                {{end}}
                            </td>
                        </tr>
                        {{end}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    {{end}}

    <!-- Available Versions -->
    <div class="card bg-base-100 shadow-xl">
        <div class="card-body">
            <h2 class="card-title">Available Syslinux Versions</h2>
            
            {{if .Versions}}
            <div class="overflow-x-auto">
                <table class="table table-zebra w-full">
                    <thead>
                        <tr>
                            <th>Version</th>
                            <th>Status</th>
                            <th>Size</th>
                            <th>Downloaded</th>
                            <th>Activated</th>
                            <th>Boot Types</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{range .Versions}}
                        <tr>
                            <td>
                                <div class="flex items-center space-x-2">
                                    <div class="w-6 h-6 bg-blue-600 rounded text-white text-xs flex items-center justify-center font-bold">S</div>
                                    <span class="font-semibold">{{.Version}}</span>
                                </div>
                            </td>
                            <td>
                                {{if .Active}}
                                    <div class="badge badge-success">Active</div>
                                {{else if .Downloaded}}
                                    <div class="badge badge-warning">Downloaded</div>
                                {{else}}
                                    <div class="badge badge-ghost">Available</div>
                                {{end}}
                            </td>
                            <td>
                                <span id="version-size-{{.ID}}">{{.Size}} bytes</span>
                            </td>
                            <td>{{if .DownloadedAt}}{{.DownloadedAt.Format "2006-01-02 15:04"}}{{else}}--{{end}}</td>
                            <td>{{if .Active}}{{.UpdatedAt.Format "2006-01-02 15:04"}}{{else}}--{{end}}</td>
                            <td>
                                <div class="flex space-x-1">
                                    <div class="badge badge-primary badge-xs">BIOS</div>
                                    <div class="badge badge-secondary badge-xs">EFI</div>
                                </div>
                            </td>
                            <td>
                                <div class="flex space-x-1">
                                    {{if not .Active}}
                                    <button class="btn btn-xs btn-primary" 
                                            hx-post="/api/syslinux/download/{{.Version}}"
                                            hx-trigger="click"
                                            hx-swap="none"
                                            hx-on::after-request="window.location.reload()"
                                            hx-confirm="This will download and activate Syslinux {{.Version}}. Any currently active version will be replaced. Continue?">
                                        Download & Activate
                                    </button>
                                    {{end}}
                                    {{if .Active}}
                                    <button class="btn btn-xs btn-info" 
                                            onclick="showVersionInfo('{{.Version}}')">
                                        Info
                                    </button>
                                    <button class="btn btn-xs btn-warning" 
                                            hx-post="/api/syslinux/deactivate/{{.Version}}"
                                            hx-trigger="click"
                                            hx-swap="none"
                                            hx-on::after-request="window.location.reload()"
                                            hx-confirm="This will deactivate Syslinux {{.Version}} and remove all boot files. Continue?">
                                        Deactivate
                                    </button>
                                    {{end}}
                                </div>
                            </td>
                        </tr>
                        {{end}}
                    </tbody>
                </table>
            </div>
            {{else}}
            <div class="text-center py-8">
                <div class="text-gray-500 mb-4">
                    <svg class="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
                    </svg>
                </div>
                <h3 class="text-lg font-semibold text-gray-700 mb-2">No Syslinux Versions Available</h3>
                <p class="text-gray-500 mb-4">Scan the mirror to find available versions</p>
                <button class="btn btn-primary" onclick="document.getElementById('scanModal').showModal()">
                    Scan Mirror
                </button>
            </div>
            {{end}}
        </div>
    </div>

</div>

<!-- Scan Modal -->
<dialog id="scanModal" class="modal">
    <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">Scan Mirror for Syslinux Versions</h3>
        <p class="mb-4">This will scan https://mirrors.kernel.org/pub/linux/utils/boot/syslinux/ for available versions.</p>
        <div class="modal-action">
            <button type="button" class="btn" onclick="document.getElementById('scanModal').close()">Cancel</button>
            <button type="button" class="btn btn-primary" 
                    hx-post="/api/syslinux/scan"
                    hx-target="body"
                    hx-swap="innerHTML"
                    onclick="document.getElementById('scanModal').close()">
                Start Scan
            </button>
        </div>
    </div>
</dialog>

<!-- Version Info Modal -->
<dialog id="infoModal" class="modal">
    <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">Syslinux Version Information</h3>
        <div id="versionInfo">
            <!-- Content will be loaded here -->
        </div>
        <div class="modal-action">
            <button type="button" class="btn" onclick="document.getElementById('infoModal').close()">Close</button>
        </div>
    </div>
</dialog>

<script>
// Show version information
function showVersionInfo(version) {
    fetch(`/api/syslinux/versions/${version}`)
        .then(response => response.json())
        .then(data => {
            const infoDiv = document.getElementById('versionInfo');
            infoDiv.innerHTML = `
                <div class="space-y-3">
                    <div><strong>Version:</strong> ${data.version}</div>
                    <div><strong>Download URL:</strong> <a href="${data.download_url}" target="_blank" class="link link-primary">${data.download_url}</a></div>
                    <div><strong>File Name:</strong> ${data.file_name}</div>
                    <div><strong>File Size:</strong> ${formatBytes(data.size)}</div>
                    <div><strong>Status:</strong> <span class="badge ${data.active ? 'badge-success' : data.downloaded ? 'badge-warning' : 'badge-ghost'}">${data.active ? 'Active' : data.downloaded ? 'Downloaded' : 'Available'}</span></div>
                    ${data.downloaded_at ? `<div><strong>Downloaded:</strong> ${new Date(data.downloaded_at).toLocaleString()}</div>` : ''}
                    ${data.active ? `<div><strong>Activated:</strong> ${new Date(data.updated_at).toLocaleString()}</div>` : ''}
                    <div><strong>Boot Types Supported:</strong> BIOS, EFI</div>
                    <div><strong>Created:</strong> ${new Date(data.created_at).toLocaleString()}</div>
                </div>
            `;
            document.getElementById('infoModal').showModal();
        })
        .catch(error => {
            console.error('Error fetching version info:', error);
            alert('Failed to load version information');
        });
}

function formatBytes(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// Format file sizes on page load
document.addEventListener('DOMContentLoaded', function() {
    // Format all version sizes
    document.querySelectorAll('[id^="version-size-"]').forEach(function(element) {
        const sizeText = element.textContent;
        const sizeMatch = sizeText.match(/(\d+) bytes/);
        if (sizeMatch) {
            const bytes = parseInt(sizeMatch[1]);
            element.textContent = formatBytes(bytes);
        }
    });
});

// Auto-refresh download status every 5 seconds if there are active downloads
{{if .Downloads}}
setInterval(() => {
    htmx.trigger('#main-content', 'refresh');
}, 5000);
{{end}}
</script>
{{ end }}